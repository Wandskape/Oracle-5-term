-- 1. Разработайте локальную процедуру GET_TEACHERS (PCODE TEACHER.PULPIT%TYPE) 
DECLARE
  PROCEDURE GET_TEACHERS (PCODE TEACHER.PULPIT%TYPE) IS
  BEGIN
    FOR rec IN (
      SELECT TEACHER_NAME
      FROM TEACHER
      WHERE PULPIT = PCODE
    ) LOOP
      DBMS_OUTPUT.PUT_LINE('Преподаватель: ' || rec.TEACHER_NAME);
    END LOOP;
  END;
BEGIN
  GET_TEACHERS('IT1');
END;
/

-- 2. Разработайте локальную функцию GET_NUM_TEACHERS (PCODE TEACHER.PULPIT%TYPE) RETURN NUMBER
DECLARE
  FUNCTION GET_NUM_TEACHERS (PCODE TEACHER.PULPIT%TYPE) RETURN NUMBER IS
    v_count NUMBER;
  BEGIN
    SELECT COUNT(*) INTO v_count
    FROM TEACHER
    WHERE PULPIT = PCODE;

    RETURN v_count;
  END;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Количество преподавателей на кафедре IT1: ' || GET_NUM_TEACHERS('IT1'));
END;
/

-- 4. Разработайте процедуры: GET_TEACHERS (FCODE FACULTY.FACULTY%TYPE) GET_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE)
DECLARE
  PROCEDURE GET_TEACHERS (FCODE FACULTY.FACULTY%TYPE) IS
  BEGIN
    FOR rec IN (
      SELECT TEACHER_NAME
      FROM TEACHER
      JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT
      WHERE PULPIT.FACULTY = FCODE
    ) LOOP
      DBMS_OUTPUT.PUT_LINE('Преподаватель Факультета ИТ: ' || rec.TEACHER_NAME);
    END LOOP;
  END;
BEGIN
  GET_TEACHERS('FIT');
END;
/

DECLARE
  PROCEDURE GET_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE) IS
  BEGIN
    FOR rec IN (
      SELECT SUBJECT_NAME
      FROM SUBJECT
      JOIN PULPIT ON SUBJECT.PULPIT = PULPIT.PULPIT
      WHERE PULPIT.PULPIT = PCODE
    ) LOOP
      DBMS_OUTPUT.PUT_LINE('Дисциплины: ' || rec.SUBJECT_NAME);
    END LOOP;
  END;
BEGIN
  GET_SUBJECTS('LX1');
END;
/

-- 5. Разработайте локальную функцию GET_NUM_TEACHERS (FCODE FACULTY.FACULTY%TYPE)RETURN NUMBER GET_NUM_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER
DECLARE
  FUNCTION GET_NUM_TEACHERS (FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER IS
    v_count NUMBER;
  BEGIN
    SELECT COUNT(*) INTO v_count
    FROM TEACHER
    JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT
    WHERE PULPIT.FACULTY = FCODE;

    RETURN v_count;
  END;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Преподаватель Факультета ИТ: ' || GET_NUM_TEACHERS('FIT'));
END;
/

DECLARE
  FUNCTION GET_NUM_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER IS
    v_count NUMBER;
  BEGIN
    SELECT COUNT(*) INTO v_count
    FROM SUBJECT
    JOIN PULPIT ON SUBJECT.PULPIT = PULPIT.PULPIT
    WHERE PULPIT.PULPIT = PCODE;

    RETURN v_count;
  END;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Дисциплины кафедры IT3: ' || GET_NUM_SUBJECTS('IT3'));
END;
/

-- 6. Разработайте пакет TEACHERS, содержащий процедуры и функции:GET_TEACHERS GET_SUBJECTS GET_NUM_TEACHERS GET_NUM_SUBJECTS
CREATE OR REPLACE PACKAGE TEACHERS IS
    PROCEDURE GET_TEACHERS(FCODE FACULTY.FACULTY%TYPE);
    PROCEDURE GET_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE);
    FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER;
    FUNCTION GET_NUM_SUBJECTS(PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER;
END TEACHERS;
/

CREATE OR REPLACE PACKAGE BODY TEACHERS IS

  PROCEDURE GET_TEACHERS (FCODE FACULTY.FACULTY%TYPE) IS
  BEGIN
    FOR rec IN (
      SELECT TEACHER_NAME
      FROM TEACHER
      JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT
      WHERE PULPIT.FACULTY = FCODE
    ) LOOP
      DBMS_OUTPUT.PUT_LINE('Преподаватель Факультета ИТ: ' || rec.TEACHER_NAME);
    END LOOP;
  END GET_TEACHERS;
  
  PROCEDURE GET_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE) IS
  BEGIN
    FOR rec IN (
      SELECT SUBJECT_NAME
      FROM SUBJECT
      JOIN PULPIT ON SUBJECT.PULPIT = PULPIT.PULPIT
      WHERE PULPIT.PULPIT = PCODE
    ) LOOP
      DBMS_OUTPUT.PUT_LINE('Дисциплины: ' || rec.SUBJECT_NAME);
    END LOOP;
  END GET_SUBJECTS;
  
  FUNCTION GET_NUM_TEACHERS (FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER IS
    v_count NUMBER;
  BEGIN
    SELECT COUNT(*) INTO v_count
    FROM TEACHER
    JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT
    WHERE PULPIT.FACULTY = FCODE;

    RETURN v_count;
  END GET_NUM_TEACHERS;
  
  FUNCTION GET_NUM_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE) RETURN NUMBER IS
    v_count NUMBER;
  BEGIN
    SELECT COUNT(*) INTO v_count
    FROM SUBJECT
    JOIN PULPIT ON SUBJECT.PULPIT = PULPIT.PULPIT
    WHERE PULPIT.PULPIT = PCODE;

    RETURN v_count;
  END GET_NUM_SUBJECTS;

END TEACHERS;
/

-- 7. Разработайте анонимный блок и продемонстрируйте выполнение процедур и функций пакета TEACHERS.
DECLARE
  v_num_teachers NUMBER;
  v_num_subjects NUMBER;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Преподаватели кафедры IT1:');
  TEACHERS.GET_TEACHERS('FIT');

  DBMS_OUTPUT.PUT_LINE('Предметы кафедры IT1:');
  TEACHERS.GET_SUBJECTS('IT1');

  v_num_teachers := TEACHERS.GET_NUM_TEACHERS('FIT');
  DBMS_OUTPUT.PUT_LINE('Количество преподавателей на кафедре IT1: ' || v_num_teachers);

  v_num_subjects := TEACHERS.GET_NUM_SUBJECTS('IT1');
  DBMS_OUTPUT.PUT_LINE('Количество предметов на кафедре IT1: ' || v_num_subjects);
END;
/



